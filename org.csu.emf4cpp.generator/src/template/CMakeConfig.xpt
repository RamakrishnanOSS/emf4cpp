
«IMPORT org::eclipse::emf::ecore»

«EXTENSION template::FQN»
«EXTENSION template::Packages»

«DEFINE CMakeConfig FOR EPackage»
«LET getFQN("_") AS fqn»
	«FILE "cmake/CMakeLists.txt"-»
	string(TOUPPER ${PROJECT_NAME} PROJECT_NAME_UPPER)
	set(package_name ${PROJECT_NAME_UPPER})
	configure_file(${package_name}Config.cmake.in ${package_name}Config.cmake @ONLY)
	
	include(CMakePackageConfigHelpers)
	write_basic_package_version_file(
	    "${CMAKE_CURRENT_BINARY_DIR}/${package_name}ConfigVersion.cmake"
	    VERSION ${PROJECT_VERSION}
	    COMPATIBILITY SameMajorVersion) # TODO
	
	export(EXPORT ${package_name}
	    FILE "${CMAKE_CURRENT_BINARY_DIR}/${package_name}Targets.cmake"
	    NAMESPACE ${package_name}::)
	
	install(EXPORT ${package_name} DESTINATION lib/cmake/${package_name}
	    FILE ${package_name}Targets.cmake
	    NAMESPACE ${package_name}::)
	
	install(FILES
	    "${CMAKE_CURRENT_BINARY_DIR}/${package_name}Config.cmake"
	    "${CMAKE_CURRENT_BINARY_DIR}/${package_name}ConfigVersion.cmake"
	    DESTINATION lib/cmake/${package_name})
	«ENDFILE-»
	«IF (boolean) GLOBALVAR bootstrap-»
		«FILE "cmake/EMF4CPPConfig.cmake.in"-»
			include(CMakeFindDependencyMacro)
			list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
			
			set(Boost_USE_STATIC_LIBS OFF) 
			set(Boost_USE_MULTITHREADED ON)  
			set(Boost_USE_STATIC_RUNTIME OFF)
			FIND_PACKAGE(Boost 1.52 COMPONENTS log filesystem REQUIRED)
			add_definitions(/DBOOST_ALL_DYN_LINK)
			include_directories(${Boost_INCLUDE_DIR})
			link_directories(${Boost_LIBRARY_DIR})

			if(@EMF4CPP_USE_QT_5@)
				FIND_PACKAGE(Qt5Core REQUIRED)
				add_definitions(-DQT_NO_VERSION_TAGGING)
				add_definitions(-DQT5_SUPPORT)
			elseif(@EMF4CPP_USE_CPPREST@)
				FIND_PACKAGE(cpprestsdk REQUIRED NAMES cpprestsdk cpprest)
			else()
				message(FATAL_ERROR "Use QT / CPPRESTSDK")
			endif()
			
			list(REMOVE_AT CMAKE_MODULE_PATH -1)
			include("${CMAKE_CURRENT_LIST_DIR}/@package_name@Targets.cmake")
		«ENDFILE»
	«ELSE»
		«LET getCMakeConfigFqn("cmake/", "Config.cmake.in") AS pkgConfig»
			«FILE "cmake/"+ GLOBALVAR projectName + "Config.cmake.in"-»
				include(CMakeFindDependencyMacro)
				list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
				
				FIND_PACKAGE(EMF4CPP REQUIRED emf4cpp-ecore emf4cpp-ecorecpp)
				
				list(REMOVE_AT CMAKE_MODULE_PATH -1)
				include("${CMAKE_CURRENT_LIST_DIR}/@package_name@Targets.cmake")
			«ENDFILE»
		«ENDLET»
	«ENDIF»
«ENDLET»

«ENDDEFINE»